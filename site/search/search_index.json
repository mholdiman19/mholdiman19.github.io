{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to ReadMyDocs Greetings Visitors! WELCOME MESSAGE: I created this site to organize and backup commands, documentation and anything else I want to have accessible. Please note that I attempted to give credit where applicable and this site is constantly updated. Needless to say, sections are not exhaustive and are my notes while reading, watching videos or on-the-job experience and learning. Thank you! For full documentation visit mkdocs.org . Mkdocs Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-readmydocs","text":"Greetings Visitors! WELCOME MESSAGE: I created this site to organize and backup commands, documentation and anything else I want to have accessible. Please note that I attempted to give credit where applicable and this site is constantly updated. Needless to say, sections are not exhaustive and are my notes while reading, watching videos or on-the-job experience and learning. Thank you! For full documentation visit mkdocs.org .","title":"Welcome to ReadMyDocs"},{"location":"#mkdocs-commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Mkdocs Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"Carinis germana Et in dedit at tamen numquam giganteis Lorem markdownum luminis ille , protecta nata haesit superi tibi orbem protinus, coniuge profundum! Coryli clamat bracchia subiit, ab ponere carpit caputque invidiosa sanguinis, non. Suus aequore in nudis; iura parte finemque sceleris facti; suam feroci nodoso. Dum fer trahunt notatas deum gramina dixerat est ipsum: in? Ulla alterius ibidis Urbem telo demum pollice Elinque, novem quo: forma index dissociata cavis fugiensque illis manibus reparata. Ab aut illis repperit, manet? It audire sine velut in aevo thalamos caecis is murum etiam tempora et dabat solvere. Procul gaudete ferox quaerenti gramina cratem, supplex cardine. serialFooter = software; jsf += serviceMpegOutput; if (mask) { newbie.plagiarismDefaultPage += baudSocial(heuristic + windowCommand, card_memory_schema, toslink); vaporware_mouse_nanometer.mouse_meta_ultra = primaryPageWireless; } Dignus submittere Marte pontum nepotem fulvos est Solebat figuram eam ferendo amara cecidit spoliata verbis, magnum est, est. Inmeriti bracchia genuit: ac collecta vota, quisquam scopulus, dixit novo quod admoveam! Quoque est nymphae notavi in sonum fructum Erat parent, locus incubat. Ire dicta dedit primum saxoque, retro? Inpia ferrum quid saepe fraxineam hospes auctor iam; tum patrii tandem illuc repetemus. Capitis et fera uno imitatus colla se lateque et ipsum malo fama cogeris! Aut admoverat antrum corpore auctor. path(threadingCtr, http + internal_byte, managementProcessSwipe); keystroke(ad); if (exabyte <= yottabyteMegabyte) { cad_domain -= 56553; bios_vdu = disk_kvm.snippet(processor / heuristic); linkedin_syntax_compact.lionGoldenImpression -= 36; } if (pum_input.hard_snow_dslam(graphicsMenuClean + daemon, multiplatform)) { surge = voip_correction(pitchBing, shortcut_office); barebonesTiff.cableIntegrated = suffix * wais; } else { lion_thunderbolt_ocr.designAlignmentUgc /= gigoWimaxBarcraft(2 + drag_wildcard_flash, cdmaVfat); lossy += application.card_link_website.bmp_rpm_excel(374363); } Arva pati Sub iaculo Tmolo furit se spectat placare inter nunc caede gemino sanesque excipit Amphrisia minimos. Nobis festumque captum. Latet superum, quique orbe! Foedumque fulvo! His molliter nil caelo posset, cetera pharetra orbes. Deos sinit mortis tamen tuos curva ferox mater labor admotis, et guttura tritis est. Pretium cornua; sunt una; Clymeneia deus resupinus, fas adapertaque ibitis huius nostro ut ferrum socii, ego? Petii quanta nocent , hanc non perdere Olympus decus fontibus se regna in optabile. Fugit servati.","title":"About"},{"location":"about/#carinis-germana","text":"","title":"Carinis germana"},{"location":"about/#et-in-dedit-at-tamen-numquam-giganteis","text":"Lorem markdownum luminis ille , protecta nata haesit superi tibi orbem protinus, coniuge profundum! Coryli clamat bracchia subiit, ab ponere carpit caputque invidiosa sanguinis, non. Suus aequore in nudis; iura parte finemque sceleris facti; suam feroci nodoso. Dum fer trahunt notatas deum gramina dixerat est ipsum: in?","title":"Et in dedit at tamen numquam giganteis"},{"location":"about/#ulla-alterius-ibidis","text":"Urbem telo demum pollice Elinque, novem quo: forma index dissociata cavis fugiensque illis manibus reparata. Ab aut illis repperit, manet? It audire sine velut in aevo thalamos caecis is murum etiam tempora et dabat solvere. Procul gaudete ferox quaerenti gramina cratem, supplex cardine. serialFooter = software; jsf += serviceMpegOutput; if (mask) { newbie.plagiarismDefaultPage += baudSocial(heuristic + windowCommand, card_memory_schema, toslink); vaporware_mouse_nanometer.mouse_meta_ultra = primaryPageWireless; }","title":"Ulla alterius ibidis"},{"location":"about/#dignus-submittere-marte-pontum-nepotem-fulvos-est","text":"Solebat figuram eam ferendo amara cecidit spoliata verbis, magnum est, est. Inmeriti bracchia genuit: ac collecta vota, quisquam scopulus, dixit novo quod admoveam!","title":"Dignus submittere Marte pontum nepotem fulvos est"},{"location":"about/#quoque-est-nymphae-notavi-in-sonum-fructum","text":"Erat parent, locus incubat. Ire dicta dedit primum saxoque, retro? Inpia ferrum quid saepe fraxineam hospes auctor iam; tum patrii tandem illuc repetemus. Capitis et fera uno imitatus colla se lateque et ipsum malo fama cogeris! Aut admoverat antrum corpore auctor. path(threadingCtr, http + internal_byte, managementProcessSwipe); keystroke(ad); if (exabyte <= yottabyteMegabyte) { cad_domain -= 56553; bios_vdu = disk_kvm.snippet(processor / heuristic); linkedin_syntax_compact.lionGoldenImpression -= 36; } if (pum_input.hard_snow_dslam(graphicsMenuClean + daemon, multiplatform)) { surge = voip_correction(pitchBing, shortcut_office); barebonesTiff.cableIntegrated = suffix * wais; } else { lion_thunderbolt_ocr.designAlignmentUgc /= gigoWimaxBarcraft(2 + drag_wildcard_flash, cdmaVfat); lossy += application.card_link_website.bmp_rpm_excel(374363); }","title":"Quoque est nymphae notavi in sonum fructum"},{"location":"about/#arva-pati","text":"Sub iaculo Tmolo furit se spectat placare inter nunc caede gemino sanesque excipit Amphrisia minimos. Nobis festumque captum. Latet superum, quique orbe! Foedumque fulvo! His molliter nil caelo posset, cetera pharetra orbes. Deos sinit mortis tamen tuos curva ferox mater labor admotis, et guttura tritis est. Pretium cornua; sunt una; Clymeneia deus resupinus, fas adapertaque ibitis huius nostro ut ferrum socii, ego? Petii quanta nocent , hanc non perdere Olympus decus fontibus se regna in optabile. Fugit servati.","title":"Arva pati"},{"location":"commands/","text":"Adding a User in Linux To add the user => adduser <username> To verify the new user was created => ls /home or cat /etc/passwd To add user to the sudoers group => usermod -aG sudo <username> then => groups <username> APT (apt) How to Prevent & Fix Package Dependency Errors in Ubuntu Update Package => sudo apt update Upgrade Packages => sudo apt dist-upgrade Clear Apt Package Cache => sudo apt clean Do a Mock Installation => sudo apt install --dry-run \"package name\" Remove Mock Installation => sudo apt remove --dry-run \"package name\" Fix Broken Installations => sudo apt -f install Configure Packages that Failed to Install => sudo dpkg --configure -a Use PPA-Purge (to install) => sudo apt install ppa-purge To Purge a PPA => sudo ppa-purge \"ppa:address\" Example => sudo ppa-purge ppa:geany-dev/ppa Use Aptitude Package Manager => sudo apt install aptitude NOT the same as apt To Reinstall Ubuntu Desktop Package => sudo apt install --reinstall ubuntu-desktop Pulls in essential packages that were installed by default To Remove or Disable PPAs Before Upgrading to a Newer Version of Ubuntu => sudo add-apt-repository --remove \"ppa:name\" Use Synaptic Package Manager to Disable a PPA (not removing) To Search for a Software Package => apt search <PACKAGE-NAME> COPY (cp) cp => commande-line utility for copying files and directories on Unix and Linux systems Command Syntax => cp [options] SOURCE... DESTINATION To Copy a File => cp file file_backup To Copy a File to Directory => cp file.txt /backup To Force Copy to Prompt for Confirmation => cp -i file.txt file_backup.txt To Copy a Directory (including all files and subdirectories) => cp -R Pictures Pictures_Backup DHCP Client Use this command to force Ubuntu Server 20.04 LTS to request a DHCP Client dhclient -r -v eth0 && rm /var/lib/dhcp/dhclient.* ; dhclient -v eth0 DPKG (dpkg) To Install a DEB Package => sudo dpkg -i example.deb If you get => dpkg: error processing package Do => sudo apt install -f GDEBI (gdebi) gdeb => command to install DEB packages that will automatically download and install any required dependencies. May need to be installed => sudo apt install gdebi-core Once installed command syntax is => sudo gdebi example.deb IP (ip) To Up/Down an Interface ip link set dev eth0 down ip link set dev eth0 up Please reference ip Command Cheat Sheet for RHEL addr => displays IP addresses and property information EX => ip addr show dev enp0s25 link => manage and display the state of all the network interfaces EX => ip link show dev enp0s25 EX => ip -s link [shows statistics] route => displays and alters the routing table EX => ip route maddr => manages and displays multicast IP addresses EX => ip maddr neigh => shows neighbor objects; also known as the ARP table for IPv4 EX => ip neigh help => displays a list of commands and arguments for each subcommand EX => ip link help EX => ip help EX => ip addr help Adjusting and Viewing Routes route add => adds an entry to the routing table EX => ip route add default via 192.168.1.1 dev enp0s25 EX => ip route add 192.168.1.0/24 via 192.168.1.1 EX => ip route add 192.168.1.0/24 dev enp0s25 route delete => deletes a routing table entry EX => ip route delete 192.168.1.0/24 via 192.168.1.1 route replace => replaces, or adds if not defined, a route EX => ip route replace 192.168.1.0/24 dev enp0s25 route get => displays the route an address will take EX => ip route get 192.168.1.5 Useful Networking Commands (Not Necessarily Provided from ip route) arping => sends an ARP request to a neighbor host EX => arping -I enp0s25 192.168.19.8 EX => arping -D -I enp0s25 192.168.19.1 [Checks for duplicate MAC addresses] ethtool => queries or controls network drive and hardware settings EX => ethtool -g eth0 EX => ethtool -i eth0 EX => ethtool -S eth0 SECURE COPY (scp) Resource => How to Use SCP Command to Securely Transfer Files Description: Secure Copy (`scp`) is a command line utility that allows you to securely copy files and directories between two locations. Command Syntax: * `scp [OPTION] [user@]SRC_HOST:]file1 [user@]DEST_HOST:]file2` * `OPTION`- `scp options` such as cipher, ssh configuration, ssh port, limit, recursive copy...etc. * `[user@]SRC_HOST:]file1` = Source File * `[user@]DEST_HOST:]file2` = Destination File Removing Crash Report Files Crash report files are located in => /var/crash To remove them, do the following: cd /var/crash/ scp ls sudo rm /var/crash Syncthing Install & Configuration Downloaded install file at Syncthing Downloads Did the install via the CLI below location to download the .deb file Resource I used to install and configure this was listed on Journal Date 20200917 Added systemd unit wget https://raw.githubusercontent.com/syncthing/syncthing/main/etc/linux-systemd/system/syncthing%40.service sudo chown root: syncthing@.service sudo mv syncthing@.service /etc/systemd/system sudo systemctl daemon-reload Enable & Start the Unit sudo systemctl enable syncthing@<user> sudo systemctl start syncthing@<user> Access the Web GUI for Synchting http://localhost:8384 Allow connections ot the Web GUI from Network Devices Open the configuration file and edit it nano /home/<user>/.config/syncthing/config.xml Change the line => <address>127.0.0.1:8384</address> To <address>0.0.0.0:8384</address> Restart Syncthing sudo systemctl restart syncthing@<user> NOTE: Now, you should be able to access the Web GUI and add shared folders. Make sure you set up a username and password in the GUI, to keep it safe. To See Available Services in Router Kernel ls /etc/init.d/ To Change Network Settings in Ubuntu via Netplan Link to Article Update the YAML file => /etc/netplan/ Example of YAML File => /home/userve/Documents/yamlexample.txt To See Partitions & Check Disk Space sudo fdisk -l To Check Hard Drive Disk Health via CLI Install smartmontools => sudo apt install smartmontools Determine which drives you want to check => sudo fdisk -l Above command will give you a list of all drives and partitions. Three Possible Tests Short Test => Sufficient for detecting issues Long Test => Used if you have concerns, as it examines the whole disk Conveyance Test => Used to test if damage occured during tranportation of the device from the manufacturer To Check Hardware Information on Linux To see info about the cpu and processing units => lscpu A report that lists detailed and brief information regarding multiple differenct hardware units, such as cpu, memory, disk, usb controllers, network adapters, etc => sudo lshw -short General purpose utility that can report detailed and brief info about multiple different hardware components => hwinfo --short To Check Power (Battery) Information via CLI Link to Article UPower Description: A command line tool for UPower which provides an interface to enumerate power sources on the system and control system-wide power management. Using the upower command => upower -i /org/freedesktop/UPower/devices/battery_BAT0 ACPI Description: Shows battery status and other ACPI information from /proc and /sys file system. To check the battery => acpi -V To just see status => acpi To see the AC adapter information => acpi -a To show thermal information => acpi -t To show thermal information in Fahrenheit => acpi -tf You can browse the same information by going to => cd /proc/acpi/ and doing, ls -al Via Directory Description: Stores ACPI information about your first battery. Command => ls -l /sys/class/power_supply/BAT0 Via GUI Description: The GUI program for the gnome power management infrastructure. It allows users to visualize their power consumption of laptop hardware. Command => gnome-power-statistics How To Use Workspaces Open the Activies Window Use Control+Alt+Up to move to the workspace shown above the current workspace in the workspace selector. Use Control+Alt+Down to move to the workspace shown below the current workspace in the workspace selector. How To Remove Directories & Files in Linux You can use the Gnome GUI You can delete directories using rmdir , rm and find NOTE You can recover files when you delete them using the GUI, but not when using the command line. To delete a directory in Linux filesystems, you are required to have write permission on the directory and its contents. If not, you will get \"Operation Not Permitted\" error. Directory names with a space in them must be escated with a backslash / . Removing Directories with rmdir To remove a directory, you can use the rmdir command line utility for deleting empty directories. Type the command followed by the name of the directory you want to remove. rmdir <directory name> If the directory is not empty, you will receive the following error: rmdir: failed to remove <directory name>: No such file or directory In the above case you will need to use the rm command or manually remove the directory contents before you delete the directory using rmdir . By default, when used without an option rm does not remove directories. Removing Directories with rm Link to Article rm is a command-line utility for deleting files and directories. Unlike rmdir the rm can delete both empty and non-empty directories. By default, when used without any option rm does not remove directories. To delete and empty directory, use the -d (--dir) option and to delete a non-empty directory, and all of its contents use the -r (--recursive or -R) option. To delete a directory with all of its contents you would type: rm -r <directory name> If a directory or a file within the directory is write-protected, you will be prompted to confirm the deletion. To remove a directory without being prompted, use the -f option. rm -rf <directory name> 10 Handy SystemD Commands: A Reference Link to Article From systemd man page => a unit file is a plain text inistyle file that encodes information about a service, a socket, a device, a mount point, an automount point, a swap file or a partition, a start-up target, a watched file system path, a timer controlled and supervised by systemd . systemd => a resource management slice, or a group of externally created processes. systemctl list-unit-files lists all unit files You can grep to see just the enabled services. $ systemctl list-unit-files | grep enabled $ systemctl list-unit-files | grep disabled Example Output Below Unit File State Vendor Preset proc-sys-fs-binfmt_misc.mount disabled enabled acpid.service disabled enabled brltty.service disabled enabled console-getty.service disabled disabled debug-shell.service disabled disabled fwupd-refresh.service static disabled openvpn3-autoload.service disabled enabled These unit files, located under /lib/systemd/system , are roughly the equivalent to the legacy init scripts that were located under /etc/rc.d/init.d . If you or your software installation created init scripts, a corresponding systemd unit file is mapped for you. Additional information can be found at /etc/rc.d/init.d/README .","title":"Linux Commands"},{"location":"commands/#adding-a-user-in-linux","text":"To add the user => adduser <username> To verify the new user was created => ls /home or cat /etc/passwd To add user to the sudoers group => usermod -aG sudo <username> then => groups <username>","title":"Adding a User in Linux"},{"location":"commands/#apt-apt","text":"","title":"APT (apt)"},{"location":"commands/#how-to-prevent-fix-package-dependency-errors-in-ubuntu","text":"Update Package => sudo apt update Upgrade Packages => sudo apt dist-upgrade Clear Apt Package Cache => sudo apt clean Do a Mock Installation => sudo apt install --dry-run \"package name\" Remove Mock Installation => sudo apt remove --dry-run \"package name\" Fix Broken Installations => sudo apt -f install Configure Packages that Failed to Install => sudo dpkg --configure -a Use PPA-Purge (to install) => sudo apt install ppa-purge To Purge a PPA => sudo ppa-purge \"ppa:address\" Example => sudo ppa-purge ppa:geany-dev/ppa Use Aptitude Package Manager => sudo apt install aptitude NOT the same as apt To Reinstall Ubuntu Desktop Package => sudo apt install --reinstall ubuntu-desktop Pulls in essential packages that were installed by default To Remove or Disable PPAs Before Upgrading to a Newer Version of Ubuntu => sudo add-apt-repository --remove \"ppa:name\" Use Synaptic Package Manager to Disable a PPA (not removing) To Search for a Software Package => apt search <PACKAGE-NAME>","title":"How to Prevent &amp; Fix Package Dependency Errors in Ubuntu"},{"location":"commands/#copy-cp","text":"cp => commande-line utility for copying files and directories on Unix and Linux systems Command Syntax => cp [options] SOURCE... DESTINATION To Copy a File => cp file file_backup To Copy a File to Directory => cp file.txt /backup To Force Copy to Prompt for Confirmation => cp -i file.txt file_backup.txt To Copy a Directory (including all files and subdirectories) => cp -R Pictures Pictures_Backup","title":"COPY (cp)"},{"location":"commands/#dhcp-client","text":"Use this command to force Ubuntu Server 20.04 LTS to request a DHCP Client dhclient -r -v eth0 && rm /var/lib/dhcp/dhclient.* ; dhclient -v eth0","title":"DHCP Client"},{"location":"commands/#dpkg-dpkg","text":"To Install a DEB Package => sudo dpkg -i example.deb If you get => dpkg: error processing package Do => sudo apt install -f","title":"DPKG (dpkg)"},{"location":"commands/#gdebi-gdebi","text":"gdeb => command to install DEB packages that will automatically download and install any required dependencies. May need to be installed => sudo apt install gdebi-core Once installed command syntax is => sudo gdebi example.deb","title":"GDEBI (gdebi)"},{"location":"commands/#ip-ip","text":"To Up/Down an Interface ip link set dev eth0 down ip link set dev eth0 up Please reference ip Command Cheat Sheet for RHEL addr => displays IP addresses and property information EX => ip addr show dev enp0s25 link => manage and display the state of all the network interfaces EX => ip link show dev enp0s25 EX => ip -s link [shows statistics] route => displays and alters the routing table EX => ip route maddr => manages and displays multicast IP addresses EX => ip maddr neigh => shows neighbor objects; also known as the ARP table for IPv4 EX => ip neigh help => displays a list of commands and arguments for each subcommand EX => ip link help EX => ip help EX => ip addr help Adjusting and Viewing Routes route add => adds an entry to the routing table EX => ip route add default via 192.168.1.1 dev enp0s25 EX => ip route add 192.168.1.0/24 via 192.168.1.1 EX => ip route add 192.168.1.0/24 dev enp0s25 route delete => deletes a routing table entry EX => ip route delete 192.168.1.0/24 via 192.168.1.1 route replace => replaces, or adds if not defined, a route EX => ip route replace 192.168.1.0/24 dev enp0s25 route get => displays the route an address will take EX => ip route get 192.168.1.5 Useful Networking Commands (Not Necessarily Provided from ip route) arping => sends an ARP request to a neighbor host EX => arping -I enp0s25 192.168.19.8 EX => arping -D -I enp0s25 192.168.19.1 [Checks for duplicate MAC addresses] ethtool => queries or controls network drive and hardware settings EX => ethtool -g eth0 EX => ethtool -i eth0 EX => ethtool -S eth0","title":"IP (ip)"},{"location":"commands/#secure-copy-scp","text":"Resource => How to Use SCP Command to Securely Transfer Files Description: Secure Copy (`scp`) is a command line utility that allows you to securely copy files and directories between two locations. Command Syntax: * `scp [OPTION] [user@]SRC_HOST:]file1 [user@]DEST_HOST:]file2` * `OPTION`- `scp options` such as cipher, ssh configuration, ssh port, limit, recursive copy...etc. * `[user@]SRC_HOST:]file1` = Source File * `[user@]DEST_HOST:]file2` = Destination File","title":"SECURE COPY (scp)"},{"location":"commands/#removing-crash-report-files","text":"Crash report files are located in => /var/crash To remove them, do the following: cd /var/crash/ scp ls sudo rm /var/crash","title":"Removing Crash Report Files"},{"location":"commands/#syncthing-install-configuration","text":"Downloaded install file at Syncthing Downloads Did the install via the CLI below location to download the .deb file Resource I used to install and configure this was listed on Journal Date 20200917 Added systemd unit wget https://raw.githubusercontent.com/syncthing/syncthing/main/etc/linux-systemd/system/syncthing%40.service sudo chown root: syncthing@.service sudo mv syncthing@.service /etc/systemd/system sudo systemctl daemon-reload Enable & Start the Unit sudo systemctl enable syncthing@<user> sudo systemctl start syncthing@<user> Access the Web GUI for Synchting http://localhost:8384 Allow connections ot the Web GUI from Network Devices Open the configuration file and edit it nano /home/<user>/.config/syncthing/config.xml Change the line => <address>127.0.0.1:8384</address> To <address>0.0.0.0:8384</address> Restart Syncthing sudo systemctl restart syncthing@<user> NOTE: Now, you should be able to access the Web GUI and add shared folders. Make sure you set up a username and password in the GUI, to keep it safe.","title":"Syncthing Install &amp; Configuration"},{"location":"commands/#to-see-available-services-in-router-kernel","text":"ls /etc/init.d/","title":"To See Available Services in Router Kernel"},{"location":"commands/#to-change-network-settings-in-ubuntu-via-netplan","text":"Link to Article Update the YAML file => /etc/netplan/ Example of YAML File => /home/userve/Documents/yamlexample.txt","title":"To Change Network Settings in Ubuntu via Netplan"},{"location":"commands/#to-see-partitions-check-disk-space","text":"sudo fdisk -l","title":"To See Partitions &amp; Check Disk Space"},{"location":"commands/#to-check-hard-drive-disk-health-via-cli","text":"Install smartmontools => sudo apt install smartmontools Determine which drives you want to check => sudo fdisk -l Above command will give you a list of all drives and partitions. Three Possible Tests Short Test => Sufficient for detecting issues Long Test => Used if you have concerns, as it examines the whole disk Conveyance Test => Used to test if damage occured during tranportation of the device from the manufacturer","title":"To Check Hard Drive Disk Health via CLI"},{"location":"commands/#to-check-hardware-information-on-linux","text":"To see info about the cpu and processing units => lscpu A report that lists detailed and brief information regarding multiple differenct hardware units, such as cpu, memory, disk, usb controllers, network adapters, etc => sudo lshw -short General purpose utility that can report detailed and brief info about multiple different hardware components => hwinfo --short","title":"To Check Hardware Information on Linux"},{"location":"commands/#to-check-power-battery-information-via-cli","text":"Link to Article","title":"To Check Power (Battery) Information via CLI"},{"location":"commands/#upower","text":"Description: A command line tool for UPower which provides an interface to enumerate power sources on the system and control system-wide power management. Using the upower command => upower -i /org/freedesktop/UPower/devices/battery_BAT0","title":"UPower"},{"location":"commands/#acpi","text":"Description: Shows battery status and other ACPI information from /proc and /sys file system. To check the battery => acpi -V To just see status => acpi To see the AC adapter information => acpi -a To show thermal information => acpi -t To show thermal information in Fahrenheit => acpi -tf You can browse the same information by going to => cd /proc/acpi/ and doing, ls -al","title":"ACPI"},{"location":"commands/#via-directory","text":"Description: Stores ACPI information about your first battery. Command => ls -l /sys/class/power_supply/BAT0","title":"Via Directory"},{"location":"commands/#via-gui","text":"Description: The GUI program for the gnome power management infrastructure. It allows users to visualize their power consumption of laptop hardware. Command => gnome-power-statistics","title":"Via GUI"},{"location":"commands/#how-to-use-workspaces","text":"Open the Activies Window Use Control+Alt+Up to move to the workspace shown above the current workspace in the workspace selector. Use Control+Alt+Down to move to the workspace shown below the current workspace in the workspace selector.","title":"How To Use Workspaces"},{"location":"commands/#how-to-remove-directories-files-in-linux","text":"You can use the Gnome GUI You can delete directories using rmdir , rm and find NOTE You can recover files when you delete them using the GUI, but not when using the command line. To delete a directory in Linux filesystems, you are required to have write permission on the directory and its contents. If not, you will get \"Operation Not Permitted\" error. Directory names with a space in them must be escated with a backslash / .","title":"How To Remove Directories &amp; Files in Linux"},{"location":"commands/#removing-directories-with-rmdir","text":"To remove a directory, you can use the rmdir command line utility for deleting empty directories. Type the command followed by the name of the directory you want to remove. rmdir <directory name> If the directory is not empty, you will receive the following error: rmdir: failed to remove <directory name>: No such file or directory In the above case you will need to use the rm command or manually remove the directory contents before you delete the directory using rmdir . By default, when used without an option rm does not remove directories.","title":"Removing Directories with rmdir"},{"location":"commands/#removing-directories-with-rm","text":"Link to Article rm is a command-line utility for deleting files and directories. Unlike rmdir the rm can delete both empty and non-empty directories. By default, when used without any option rm does not remove directories. To delete and empty directory, use the -d (--dir) option and to delete a non-empty directory, and all of its contents use the -r (--recursive or -R) option. To delete a directory with all of its contents you would type: rm -r <directory name> If a directory or a file within the directory is write-protected, you will be prompted to confirm the deletion. To remove a directory without being prompted, use the -f option. rm -rf <directory name>","title":"Removing Directories with rm"},{"location":"commands/#10-handy-systemd-commands-a-reference","text":"Link to Article From systemd man page => a unit file is a plain text inistyle file that encodes information about a service, a socket, a device, a mount point, an automount point, a swap file or a partition, a start-up target, a watched file system path, a timer controlled and supervised by systemd . systemd => a resource management slice, or a group of externally created processes. systemctl list-unit-files lists all unit files You can grep to see just the enabled services. $ systemctl list-unit-files | grep enabled $ systemctl list-unit-files | grep disabled Example Output Below Unit File State Vendor Preset proc-sys-fs-binfmt_misc.mount disabled enabled acpid.service disabled enabled brltty.service disabled enabled console-getty.service disabled disabled debug-shell.service disabled disabled fwupd-refresh.service static disabled openvpn3-autoload.service disabled enabled These unit files, located under /lib/systemd/system , are roughly the equivalent to the legacy init scripts that were located under /etc/rc.d/init.d . If you or your software installation created init scripts, a corresponding systemd unit file is mapped for you. Additional information can be found at /etc/rc.d/init.d/README .","title":"10 Handy SystemD Commands: A Reference"},{"location":"docker/","text":"Docker UDEMY Class Notes Section 1 Docker is a platform that lets you package, develop and run applications in containers. a virutal environment on top of the OS kernel to capture all of its sw-libraries, dependencies, etc. insert image from notes here isolated from other containers lightweight approach, more so than virtual machines. portability to major architectures and OS's able to achieve continuous integration & deployment for DevOps Main Features create images and containers docker-compose for multi-container apps docker swarm to utilize multiple machines running Docker Installing Docker on Ubuntu Download Docker Install Script => wget -qO- https://get.docker.com/ | sh sudo usermod -aG docker $(whoami) Restart OS Try docker and docker container ls To verify your Docker version => docker --version Docker Essentials Resource : Learn Linux YouTube Series by Jay LaCroix => Docker Essentials Part 3 - Installing Docker on Windows 10, macOS and Ubuntu For Ubuntu Make sure that your system is the most up to date. sudo apt update sudo apt dist-upgrade Run systemctl status docker to see if Docker is running. If it is showing as disbled, then you can run sudo systemctl enable docker If it is not started, then you can run sudo systemctl start docker To confirm that Docker is working, you can run sudo docker run hello-world To make sure that you don't always have to run commands with sudo , you can do sudo usermod -aG docker <userid> Restart system after adding yourself to the Docker group. Part 4 - Running Containers docker images => will show you all available images on your machine. Since we ran the hello-world image in the previous step, the docker image should be listed in the results. docker search <imagename> => will show you all available images with the name ubuntu docker pull <imagename> => will download the image docker run <imagename> = will run the image you want to create your container in Note if you run a container and there is nothing for it to do, then it will just exit. For example, if you just type docker run ubuntu , then nothing will happen because you did not tell it do anything. docker ps => list of Docker images running on your machine. docker ps -a => list of Docker images that have been run on your machine. To attempt to keep a container running, you can run => docker run -it ubuntu /bin/bash it => i stands for interactive; t stands for tty or terminal Part 5 - Making Containers Persist Using the same command as above => docker run -it ubuntu /bin/bash Add -d to keep it running in the background => docker run -it -d ubuntu /bin/bash -d stands for daemon (a service running in the background) To confirm the container is still running, run docker ps Results :CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES b677c09360ba ubuntu \"/bin/bash\" 3 minutes ago Up 3 minutes naughty_jones How to attach yourselft to a container => docker attach <containerID> Results : prompt changes to root@<containerID> How to exit a container while leaving the container running => Ctrl+pq Part 6 - Accessing Containerized Applications Let's try running a different container => docker run nginx Nginx is a proxy and web server docker run -it -d -p 8080:80 nginx -p means port Here we are opening port 8080 on our host computer and opening port 80 on the docker container. Then, do docker ps to make sure that your container is running. Since nginx is a webserver, you can type <ipaddress of host>:8080 in to a browser, and you will see the nginx main screen popup. Any computer on your network should be able to bring up the webpage. To see the Nginx container running do a docker ps To stop the container from running you can do => docker stop <containerID> Now do => docker run -it -d --restart unless-stopped -p 8080:80 nginx The restart unless-stopped is very helpful so you can do a Ctrl+C without stopping the container from running. Part 7: Creating Images Last video in the series. Create an Ubuntu image docker run -it ubuntu apt update apt dist-upgrade apt install apache2 To see if apache is running => /etc/init.d/apache2 status To start it => /etc/init.d/apache2 start Let's install vim => apt install vim-nox Now, lets save all of these changes, so we do not lose them. Do, docker ps to obtain the Container ID. Then, do docker commit <containerID> <newname>:<versioninfo> My example => docker commit 5db0e25d6ca0 ubuntu/apache-test:1.0 You receive a sha256 hash. Then do docker images and you should see your image listed. Now, lets stop everything and go back in and see if we can still get to our image. docker stop <containerID> Do docker ps to make sure nothing is running. Since you have confirmed nothing is running, lets try to locate and use our image we created earlier. docker run -d -it -p 8080:80 <imagename> For my example, it would be docker run -d -it -p 8080:80 ubuntu/apache-test:1.0 Do docker ps Since it is running, lets bring up a webpage, using same webpage we used earlier, which was <IPaddress:8080> Doh, it does not work. Why? Because Apache is not running, as we did not create an entry point. Lets add an entry point => docker commit --change='ENTRYPOINT [\"apachectl\", \"-DFOREGROUND\"]' c26 ubuntu/apache-test:1.1 Receive SHA256 hash again Do docker images You should see both of your images Do docker ps to see your running containers Stop the original container that is still running => docker stop <containerID> Then recall the last command via the up arrow, just change the version from 1.0 to 1.1. Hit enter. Do docker ps to see insure your image is running. Now, lets try to bring up the webpage again. You should now see the Apache2 Default page. Now, lets automate this entire process by creating text file, known as a docker file docker build -t ubuntu/apache-test:1.2 . DockerFile To remove Docker images => docker rmi <imageID> To remove Docker containers => docker rm <containerID> If you are receiving messages that state you are unable to remove an image because a container is using it, then do docker ps -a or docker ps -a | grep <containerID> . You can confirm the image is removed by doing docker images","title":"Docker"},{"location":"docker/#docker","text":"","title":"Docker"},{"location":"docker/#udemy-class-notes","text":"","title":"UDEMY Class Notes"},{"location":"docker/#section-1","text":"Docker is a platform that lets you package, develop and run applications in containers. a virutal environment on top of the OS kernel to capture all of its sw-libraries, dependencies, etc. insert image from notes here isolated from other containers lightweight approach, more so than virtual machines. portability to major architectures and OS's able to achieve continuous integration & deployment for DevOps","title":"Section 1"},{"location":"docker/#main-features","text":"create images and containers docker-compose for multi-container apps docker swarm to utilize multiple machines running Docker","title":"Main Features"},{"location":"docker/#installing-docker-on-ubuntu","text":"Download Docker Install Script => wget -qO- https://get.docker.com/ | sh sudo usermod -aG docker $(whoami) Restart OS Try docker and docker container ls To verify your Docker version => docker --version","title":"Installing Docker on Ubuntu"},{"location":"docker/#docker-essentials","text":"Resource : Learn Linux YouTube Series by Jay LaCroix => Docker Essentials","title":"Docker Essentials"},{"location":"docker/#part-3-installing-docker-on-windows-10-macos-and-ubuntu","text":"For Ubuntu Make sure that your system is the most up to date. sudo apt update sudo apt dist-upgrade Run systemctl status docker to see if Docker is running. If it is showing as disbled, then you can run sudo systemctl enable docker If it is not started, then you can run sudo systemctl start docker To confirm that Docker is working, you can run sudo docker run hello-world To make sure that you don't always have to run commands with sudo , you can do sudo usermod -aG docker <userid> Restart system after adding yourself to the Docker group.","title":"Part 3 - Installing Docker on Windows 10, macOS and Ubuntu"},{"location":"docker/#part-4-running-containers","text":"docker images => will show you all available images on your machine. Since we ran the hello-world image in the previous step, the docker image should be listed in the results. docker search <imagename> => will show you all available images with the name ubuntu docker pull <imagename> => will download the image docker run <imagename> = will run the image you want to create your container in Note if you run a container and there is nothing for it to do, then it will just exit. For example, if you just type docker run ubuntu , then nothing will happen because you did not tell it do anything. docker ps => list of Docker images running on your machine. docker ps -a => list of Docker images that have been run on your machine. To attempt to keep a container running, you can run => docker run -it ubuntu /bin/bash it => i stands for interactive; t stands for tty or terminal","title":"Part 4 - Running Containers"},{"location":"docker/#part-5-making-containers-persist","text":"Using the same command as above => docker run -it ubuntu /bin/bash Add -d to keep it running in the background => docker run -it -d ubuntu /bin/bash -d stands for daemon (a service running in the background) To confirm the container is still running, run docker ps Results :CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES b677c09360ba ubuntu \"/bin/bash\" 3 minutes ago Up 3 minutes naughty_jones How to attach yourselft to a container => docker attach <containerID> Results : prompt changes to root@<containerID> How to exit a container while leaving the container running => Ctrl+pq","title":"Part 5 - Making Containers Persist"},{"location":"docker/#part-6-accessing-containerized-applications","text":"Let's try running a different container => docker run nginx Nginx is a proxy and web server docker run -it -d -p 8080:80 nginx -p means port Here we are opening port 8080 on our host computer and opening port 80 on the docker container. Then, do docker ps to make sure that your container is running. Since nginx is a webserver, you can type <ipaddress of host>:8080 in to a browser, and you will see the nginx main screen popup. Any computer on your network should be able to bring up the webpage. To see the Nginx container running do a docker ps To stop the container from running you can do => docker stop <containerID> Now do => docker run -it -d --restart unless-stopped -p 8080:80 nginx The restart unless-stopped is very helpful so you can do a Ctrl+C without stopping the container from running.","title":"Part 6 - Accessing Containerized Applications"},{"location":"docker/#part-7-creating-images","text":"Last video in the series. Create an Ubuntu image docker run -it ubuntu apt update apt dist-upgrade apt install apache2 To see if apache is running => /etc/init.d/apache2 status To start it => /etc/init.d/apache2 start Let's install vim => apt install vim-nox Now, lets save all of these changes, so we do not lose them. Do, docker ps to obtain the Container ID. Then, do docker commit <containerID> <newname>:<versioninfo> My example => docker commit 5db0e25d6ca0 ubuntu/apache-test:1.0 You receive a sha256 hash. Then do docker images and you should see your image listed. Now, lets stop everything and go back in and see if we can still get to our image. docker stop <containerID> Do docker ps to make sure nothing is running. Since you have confirmed nothing is running, lets try to locate and use our image we created earlier. docker run -d -it -p 8080:80 <imagename> For my example, it would be docker run -d -it -p 8080:80 ubuntu/apache-test:1.0 Do docker ps Since it is running, lets bring up a webpage, using same webpage we used earlier, which was <IPaddress:8080> Doh, it does not work. Why? Because Apache is not running, as we did not create an entry point. Lets add an entry point => docker commit --change='ENTRYPOINT [\"apachectl\", \"-DFOREGROUND\"]' c26 ubuntu/apache-test:1.1 Receive SHA256 hash again Do docker images You should see both of your images Do docker ps to see your running containers Stop the original container that is still running => docker stop <containerID> Then recall the last command via the up arrow, just change the version from 1.0 to 1.1. Hit enter. Do docker ps to see insure your image is running. Now, lets try to bring up the webpage again. You should now see the Apache2 Default page. Now, lets automate this entire process by creating text file, known as a docker file docker build -t ubuntu/apache-test:1.2 . DockerFile To remove Docker images => docker rmi <imageID> To remove Docker containers => docker rm <containerID> If you are receiving messages that state you are unable to remove an image because a container is using it, then do docker ps -a or docker ps -a | grep <containerID> . You can confirm the image is removed by doing docker images","title":"Part 7: Creating Images"},{"location":"gitnotes/","text":"GitHub Notes SSH Keys To generate a SSH key => ssh-keygen -t rsa -b 4096 -C \"emailaddress\" Default file location => /user/mholdiman/.ssh/id_rsa To search for newly generated key => ls | grep <filename> To see your public key => cat <filename>.pub You can copy from the terminal and paste into GitHub, or you can do pbcopy < ~/<filename>.pub Adding you SSH key to the ssh-agent Start the ssh-agent in the background => eval \"$(ssh-agent -s)\" Add your SSH private key to the ssh-agent and store your passphrase in the keychain. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_rsa in the command with the name of your private key file => ssh-add -K ~/.ssh/id_rsa Git Push git push origin master Tells git to push the changes you made locally (origin) to the GitHub branch (master) What if you start a repo locally? Open folder in Visual Studio Code If not a git repo, then do git init To push this live, you would do git push origin master However, if the repo is not on GitHub, then you will need to create a new repo on GitHub Copy Do git remote add origin <paste SSH Link from GitHub> Then do git remote -v to verify Now, you should be able to do git push origin master In the future, you could just type in git push , but you need to set an upstream first. Shortcut => git push -u origin master GitHub Workflow => Write Code > Commit Changes If it is not our code, then we can do what is called a pull request. GitHub Workflow would then be Write Code > Commit Changes > Make a Pull Request Local Git Workflow => Write Code > Stage Changes git add > Commit Changes git commit > Push Changes git push > Make a Pull Request Git Branching Master Branch => default branch in GitHub. We can also create a Feature Branch Each individual branch does not know about changes to any other branches. Why is this useful? When rolling out new features, you can test it here. It is a sandboxed environment. git branch => shows what branch you are currently in results => *master (END) To create a new branch => git checkout To create a new branch and name the branch => git checkout -b <new branch name> To see differences between files => git diff <branch name of the one that you want to compare it to> Instead of doing a git merge , it is more common to push the changes to GitHub in the repo you are in, and then merge in GitHub. Pull Requests aka PRs What is a pull request? Get your code pulled into another branch You make a PR from feature branch to the master branch Once it is merged, you remove the branch You do the pull request in GitHub and then do another pull request to update your local system => git pull origin master Now that your branch has been merged with the master, you can delete the branch => git branch -d <branch name>","title":"GitHub"},{"location":"gitnotes/#github-notes","text":"","title":"GitHub Notes"},{"location":"gitnotes/#ssh-keys","text":"To generate a SSH key => ssh-keygen -t rsa -b 4096 -C \"emailaddress\" Default file location => /user/mholdiman/.ssh/id_rsa To search for newly generated key => ls | grep <filename> To see your public key => cat <filename>.pub You can copy from the terminal and paste into GitHub, or you can do pbcopy < ~/<filename>.pub","title":"SSH Keys"},{"location":"gitnotes/#adding-you-ssh-key-to-the-ssh-agent","text":"Start the ssh-agent in the background => eval \"$(ssh-agent -s)\" Add your SSH private key to the ssh-agent and store your passphrase in the keychain. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_rsa in the command with the name of your private key file => ssh-add -K ~/.ssh/id_rsa","title":"Adding you SSH key to the ssh-agent"},{"location":"gitnotes/#git-push","text":"git push origin master Tells git to push the changes you made locally (origin) to the GitHub branch (master)","title":"Git Push"},{"location":"gitnotes/#what-if-you-start-a-repo-locally","text":"Open folder in Visual Studio Code If not a git repo, then do git init To push this live, you would do git push origin master However, if the repo is not on GitHub, then you will need to create a new repo on GitHub Copy Do git remote add origin <paste SSH Link from GitHub> Then do git remote -v to verify Now, you should be able to do git push origin master In the future, you could just type in git push , but you need to set an upstream first. Shortcut => git push -u origin master GitHub Workflow => Write Code > Commit Changes If it is not our code, then we can do what is called a pull request. GitHub Workflow would then be Write Code > Commit Changes > Make a Pull Request Local Git Workflow => Write Code > Stage Changes git add > Commit Changes git commit > Push Changes git push > Make a Pull Request","title":"What if you start a repo locally?"},{"location":"gitnotes/#git-branching","text":"Master Branch => default branch in GitHub. We can also create a Feature Branch Each individual branch does not know about changes to any other branches. Why is this useful? When rolling out new features, you can test it here. It is a sandboxed environment. git branch => shows what branch you are currently in results => *master (END) To create a new branch => git checkout To create a new branch and name the branch => git checkout -b <new branch name> To see differences between files => git diff <branch name of the one that you want to compare it to> Instead of doing a git merge , it is more common to push the changes to GitHub in the repo you are in, and then merge in GitHub.","title":"Git Branching"},{"location":"gitnotes/#pull-requests-aka-prs","text":"What is a pull request? Get your code pulled into another branch You make a PR from feature branch to the master branch Once it is merged, you remove the branch You do the pull request in GitHub and then do another pull request to update your local system => git pull origin master Now that your branch has been merged with the master, you can delete the branch => git branch -d <branch name>","title":"Pull Requests aka PRs"},{"location":"javascript/","text":"JavaScript Course: JavaScript Algorithms and Data Structures Certification NOTE from freeCodeCamp Comment Your JavaScript Code Comments are lines of code that JavaScript will intentionally ignore. Leave notes for yourself and others who are reading your code. To leave an in-line comment. // This is an in-line comment. To leave a multi-line comment beginning with /* and ending iwth */ . /* This is a multi-line comment */ Declare JavaScript Variables Data is anything that is meaningful to the computer. undefined null boolean string symbol bigint number object Computer's need to be able to distinguish between numbers and strings, such as \"12\" and \"123 dogs\". Whereas, \"12\" is a number , and \"123 dogs\" should be processed as a string . Variables allow computers to store and manipulate data. Any of the above eight data types may be stored as a variable. Computer variables differ from mathematical variables in that they can store different values at different times. How do we declare variables? By putting var in front of it. Example: var myName; In JavaScript, we end statements with semicolons.","title":"Java Script"},{"location":"javascript/#javascript","text":"","title":"JavaScript"},{"location":"javascript/#course-javascript-algorithms-and-data-structures-certification","text":"NOTE from freeCodeCamp","title":"Course:  JavaScript Algorithms and Data Structures Certification"},{"location":"javascript/#comment-your-javascript-code","text":"Comments are lines of code that JavaScript will intentionally ignore. Leave notes for yourself and others who are reading your code. To leave an in-line comment. // This is an in-line comment. To leave a multi-line comment beginning with /* and ending iwth */ . /* This is a multi-line comment */","title":"Comment Your JavaScript Code"},{"location":"javascript/#declare-javascript-variables","text":"Data is anything that is meaningful to the computer. undefined null boolean string symbol bigint number object Computer's need to be able to distinguish between numbers and strings, such as \"12\" and \"123 dogs\". Whereas, \"12\" is a number , and \"123 dogs\" should be processed as a string . Variables allow computers to store and manipulate data. Any of the above eight data types may be stored as a variable. Computer variables differ from mathematical variables in that they can store different values at different times. How do we declare variables? By putting var in front of it. Example: var myName; In JavaScript, we end statements with semicolons.","title":"Declare JavaScript Variables"},{"location":"nodered/","text":"Node-RED Node-RED Essentials Resource Used: Node-RED Essentials Introduction Editor Components Creating a Flow Wiring Node Editing Nodes Deploying Flows Information Sidebar Debug Sidebar Configuration Nodes Sidebar Context Sidebar Subflows Working with Context Introduction to Messages Working with Messages Message Sequences Routing Messages Managing Messages Merging Flows Grouping Nodes Introduction flow based programming tool browser based built on top of node.js Editor Components 4 areas of the editor header (menu, deploy button) sidebar (info, debug, context) main workspace palette Creating a Flow To create a flow, drag inject node on to the workspace. Then, add debug node to the workspace. Drag a line from the inject node timestamp to debug node msg.payload . For something to happen, you need to click the Deploy button. Then, click on the button on the left hand side of the timestamp node to inject the timestamp into the msg.payload . Now, add function node to add JavaScript code that gets run against each message passing through. Sub turpe Medusae vestes edidit Non et Oro orbe conversa Aesone. Matris et an penetravit illud Priami. In futuri, numine tulerant Phaethontis flere cum perpetuum soporis curvamine vel Cauni gerit. Mota vivit, dies illic noctes fugit rebello nec innata , sic votis? Columbas mercede, quoque unus flamma eras sensimus, cum miles et fluctus inprobe! Victae profundi sparsit perspexerat meritos plura ibi Vidistis umbrae tumidus Trepidantem remis patrios Quae teneat sagittis et ritu undas esset rubra est, sed infusa dictas dolore quamcumque autumni, mortale colit carpsere. Spectas saetigerosque nulla. Sorores erit miserata mihi. Et sine! Atque de quas Veneri macies arcum. Uberaque manes scylla Proserpina simul iners vulnere cum populis latitant fieri, exiguo artes, pharetram per, in. Corpora orbem Icare quique in et ego nec veneni, interea? Fastigiaque eademque silvis brevis sunt membrisque, vix non, Lernaeae. Nulli est; tellus manu teneat ut fata iam rostro, cum curat Achaidos, mihi? Vir Aeolon superamur tendebam notam.","title":"Node-RED"},{"location":"nodered/#node-red","text":"","title":"Node-RED"},{"location":"nodered/#node-red-essentials","text":"Resource Used: Node-RED Essentials Introduction Editor Components Creating a Flow Wiring Node Editing Nodes Deploying Flows Information Sidebar Debug Sidebar Configuration Nodes Sidebar Context Sidebar Subflows Working with Context Introduction to Messages Working with Messages Message Sequences Routing Messages Managing Messages Merging Flows Grouping Nodes","title":"Node-RED Essentials"},{"location":"nodered/#introduction","text":"flow based programming tool browser based built on top of node.js","title":"Introduction"},{"location":"nodered/#editor-components","text":"4 areas of the editor header (menu, deploy button) sidebar (info, debug, context) main workspace palette","title":"Editor Components"},{"location":"nodered/#creating-a-flow","text":"To create a flow, drag inject node on to the workspace. Then, add debug node to the workspace. Drag a line from the inject node timestamp to debug node msg.payload . For something to happen, you need to click the Deploy button. Then, click on the button on the left hand side of the timestamp node to inject the timestamp into the msg.payload . Now, add function node to add JavaScript code that gets run against each message passing through.","title":"Creating a Flow"},{"location":"nodered/#sub-turpe-medusae-vestes-edidit-non-et","text":"Oro orbe conversa Aesone. Matris et an penetravit illud Priami. In futuri, numine tulerant Phaethontis flere cum perpetuum soporis curvamine vel Cauni gerit. Mota vivit, dies illic noctes fugit rebello nec innata , sic votis? Columbas mercede, quoque unus flamma eras sensimus, cum miles et fluctus inprobe! Victae profundi sparsit perspexerat meritos plura ibi Vidistis umbrae tumidus Trepidantem remis patrios Quae teneat sagittis et ritu undas esset rubra est, sed infusa dictas dolore quamcumque autumni, mortale colit carpsere. Spectas saetigerosque nulla. Sorores erit miserata mihi. Et sine! Atque de quas Veneri macies arcum. Uberaque manes scylla Proserpina simul iners vulnere cum populis latitant fieri, exiguo artes, pharetram per, in. Corpora orbem Icare quique in et ego nec veneni, interea? Fastigiaque eademque silvis brevis sunt membrisque, vix non, Lernaeae. Nulli est; tellus manu teneat ut fata iam rostro, cum curat Achaidos, mihi? Vir Aeolon superamur tendebam notam.","title":"Sub turpe Medusae vestes edidit Non et"},{"location":"openSSH/","text":"OpenSSH Notes: These are my notes on Jay LaCroix's YouTube video. Link to Video Connecting to a Server via OpenSSH CLI OpenSSH client is on the majority of Linux distributions. Even though the client is installed on your system, it does not mean people can connect to you. How to tell if you have the SSH client installed => which ssh Results => /usr/bin/bash (meaning it is already installed) If the SSH Client was not installed, then you could search via => apt search openssh-client To connect to a SSH Server => ssh <username>@<server_IP_address> You will receive a key fingerprint message if you have not connected to the server previously. To see what occured in your system, navigate to => ls /home/mholdiman/ -a You will see you have a hidden directory called .ssh Navigate to that directory => cd .ssh Lets look at the file called known_hosts => cat known_hosts The file will show all the fingerprints for servers you have connected to previously. Why is this important? It helps you mitigate \"Man in the Middle\" attacks. Man in the Middle attack means you wouldn't be connecting to the server you think you are connecting to. What happens when you connect to a server behind the scenes? Connect to the server via ssh . Since you are root, you have full access to the log files. Navigate to /var/log/ You can watch the auth.log file by doing => tail -f auth.log This is useful to know, so you can watch log if someone cannot connect. Configuring a SSH Client Located => ~/.ssh/ Create file called config Host \"name\" Hostname \"IP Address\" Port 22 User \"username\" NOTE: For this to work for me, I had to add the host and hostname information to my /etc/hosts file. Using Public/Private Keys It is better to use ssh keys than to just use a password. Best practice is to disable password authorization on a server. To create a ssh keypair => ssh-keygen It will automatically create the keys in the default location. Default Location => ~/.ssh The two keys created with the above command are id_rsa and id_rsa.pub . Once the keys are created a random art image and the key fingerprint will show in the output. The private key id_rsa and id_rsa.pub are required for the SSH connection to work. The public key id_rsa.pub needs to be copied to the server. To do this, you can do the following: cat the contents of the id_rsa.pub and copy and paste to the authorized_keys file on the server. Use the command => ssh-copy-id -i ~/.ssh/id_rsa.pub root@<Server_IP> . The SSH program will automatically create the .ssh/ and the authorized_keys file if they do not already exist.","title":"OpenSSH"},{"location":"openSSH/#openssh","text":"Notes: These are my notes on Jay LaCroix's YouTube video. Link to Video","title":"OpenSSH"},{"location":"openSSH/#connecting-to-a-server-via-openssh-cli","text":"OpenSSH client is on the majority of Linux distributions. Even though the client is installed on your system, it does not mean people can connect to you. How to tell if you have the SSH client installed => which ssh Results => /usr/bin/bash (meaning it is already installed) If the SSH Client was not installed, then you could search via => apt search openssh-client To connect to a SSH Server => ssh <username>@<server_IP_address> You will receive a key fingerprint message if you have not connected to the server previously. To see what occured in your system, navigate to => ls /home/mholdiman/ -a You will see you have a hidden directory called .ssh Navigate to that directory => cd .ssh Lets look at the file called known_hosts => cat known_hosts The file will show all the fingerprints for servers you have connected to previously. Why is this important? It helps you mitigate \"Man in the Middle\" attacks. Man in the Middle attack means you wouldn't be connecting to the server you think you are connecting to. What happens when you connect to a server behind the scenes? Connect to the server via ssh . Since you are root, you have full access to the log files. Navigate to /var/log/ You can watch the auth.log file by doing => tail -f auth.log This is useful to know, so you can watch log if someone cannot connect.","title":"Connecting to a Server via OpenSSH CLI"},{"location":"openSSH/#configuring-a-ssh-client","text":"Located => ~/.ssh/ Create file called config Host \"name\" Hostname \"IP Address\" Port 22 User \"username\" NOTE: For this to work for me, I had to add the host and hostname information to my /etc/hosts file.","title":"Configuring a SSH Client"},{"location":"openSSH/#using-publicprivate-keys","text":"It is better to use ssh keys than to just use a password. Best practice is to disable password authorization on a server. To create a ssh keypair => ssh-keygen It will automatically create the keys in the default location. Default Location => ~/.ssh The two keys created with the above command are id_rsa and id_rsa.pub . Once the keys are created a random art image and the key fingerprint will show in the output. The private key id_rsa and id_rsa.pub are required for the SSH connection to work. The public key id_rsa.pub needs to be copied to the server. To do this, you can do the following: cat the contents of the id_rsa.pub and copy and paste to the authorized_keys file on the server. Use the command => ssh-copy-id -i ~/.ssh/id_rsa.pub root@<Server_IP> . The SSH program will automatically create the .ssh/ and the authorized_keys file if they do not already exist.","title":"Using Public/Private Keys"},{"location":"openvpn/","text":"OpenVPN Information To Connect an Ubuntu machine to OpenVPN server System Info Date: 2021.01.21 OS: Ubuntu 20.04 OpenVPN: OpenVPN 2.4.7 Configuration File: 192.168.20.2.ovpn File Location => ~/Documents/work/KBs/ Procedure sudo apt update sudo apt install openvpn -y Download the Standalone VPN Client configuration file from your WebAccess/VPN server. Navigate to the directory where the configuration was downloaded. For my example, it would be cd ~/Downloads Then, run the following command to the connect to the OpenVPN server. sudo openvpn --config 192.168.20.2.ovpn","title":"OpenVPN"},{"location":"openvpn/#openvpn-information","text":"","title":"OpenVPN Information"},{"location":"openvpn/#to-connect-an-ubuntu-machine-to-openvpn-server","text":"System Info Date: 2021.01.21 OS: Ubuntu 20.04 OpenVPN: OpenVPN 2.4.7 Configuration File: 192.168.20.2.ovpn File Location => ~/Documents/work/KBs/ Procedure sudo apt update sudo apt install openvpn -y Download the Standalone VPN Client configuration file from your WebAccess/VPN server. Navigate to the directory where the configuration was downloaded. For my example, it would be cd ~/Downloads Then, run the following command to the connect to the OpenVPN server. sudo openvpn --config 192.168.20.2.ovpn","title":"To Connect an Ubuntu machine to OpenVPN server"},{"location":"resources/","text":"List of Cool Resources Learn C Learn C++ C++ Reference Women Who Code","title":"Cool Resources"},{"location":"resources/#list-of-cool-resources","text":"Learn C Learn C++ C++ Reference Women Who Code","title":"List of Cool Resources"},{"location":"samba/","text":"Installing & Configuring Samba Update first => sudo apt update To install => sudo apt install samba To check version information => samba --version To see where Samba is installed => whereis samba Create a directory for Samba to share => mkdir ~/<username>/sambashare/ Location of Samba configuration file => /etc/samba/smb.conf Example of Samba configuration file: [sambashare] comment = Samba on Ubuntu path = /home/ /sambashare read only = no browsable = yes To setup a Samba password => sudo smbpasswd -a username Connecting to a Share In Ubuntu: Open up the default file manager and click Connect to Server then enter => smb://ip-address/sambashare In Windows: Open File Manager and edit the file path to => \\\\ip-address\\sambashare NOTE: ip-address => Samba server IP address & sambashare is the name of the share RESOURCE : Installing and Configuring Samba My Samba Configuration [homes] comment = Home Directories browseable = yes read only = no create mask = 0700 directory mask = 0700 valid users = %S","title":"Samba"},{"location":"samba/#installing-configuring-samba","text":"Update first => sudo apt update To install => sudo apt install samba To check version information => samba --version To see where Samba is installed => whereis samba Create a directory for Samba to share => mkdir ~/<username>/sambashare/ Location of Samba configuration file => /etc/samba/smb.conf Example of Samba configuration file: [sambashare] comment = Samba on Ubuntu path = /home/ /sambashare read only = no browsable = yes To setup a Samba password => sudo smbpasswd -a username","title":"Installing &amp; Configuring Samba"},{"location":"samba/#connecting-to-a-share","text":"In Ubuntu: Open up the default file manager and click Connect to Server then enter => smb://ip-address/sambashare In Windows: Open File Manager and edit the file path to => \\\\ip-address\\sambashare NOTE: ip-address => Samba server IP address & sambashare is the name of the share RESOURCE : Installing and Configuring Samba","title":"Connecting to a Share"},{"location":"samba/#my-samba-configuration","text":"[homes] comment = Home Directories browseable = yes read only = no create mask = 0700 directory mask = 0700 valid users = %S","title":"My Samba Configuration"},{"location":"webaccessdmp/","text":"WebAccess/DMP Description : All notes or information on using WebAccess/DMP (WA/DMP). Login Information - API WebAccess/DMP API Make sure you are logged into your account. Click on API Gallery. Select SWH API. Click on the Authorize button. In the client_id field, please enter swagger_ui . Please be sure to check the box for the following fields: AuthAPI, DeviceAPI, AppStoreAPI and NotificationsAPI. Lastly, please click the Authorize button.","title":"WebAccess/DMP"},{"location":"webaccessdmp/#webaccessdmp","text":"Description : All notes or information on using WebAccess/DMP (WA/DMP).","title":"WebAccess/DMP"},{"location":"webaccessdmp/#login-information-api","text":"WebAccess/DMP API Make sure you are logged into your account. Click on API Gallery. Select SWH API. Click on the Authorize button. In the client_id field, please enter swagger_ui . Please be sure to check the box for the following fields: AuthAPI, DeviceAPI, AppStoreAPI and NotificationsAPI. Lastly, please click the Authorize button.","title":"Login Information - API"}]}